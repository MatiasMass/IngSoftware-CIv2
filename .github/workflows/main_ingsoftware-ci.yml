# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - ingsoftware-ci

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Run tests
        run: pytest test.py

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/
      - name: Send Slack notification
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  sonarcloud:
    name: SonarCloud
    needs: [build]
    runs-on: ubuntu-latest
    if: needs.build.result == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Send Slack notification
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
            status: ${{ job.status }}
            token: ${{ secrets.GITHUB_TOKEN }}
            notification_title: "{workflow} has {status_message}"
            message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
            footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
            notify_when: "failure"
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} 
  deploy:
    runs-on: ubuntu-latest
    needs: [sonarcloud]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'ingsoftware-ci'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CDC4D83382674E70864AFCAEE1B34E0D }}
      - name: Send Slack notification
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
            status: ${{ job.status }}
            token: ${{ secrets.GITHUB_TOKEN }}
            notification_title: "{workflow} has {status_message}"
            message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
            footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
            notify_when: "failure, success"
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} 